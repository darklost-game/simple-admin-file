// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	base "github.com/suyuan32/simple-admin-file/internal/handler/base"
	file "github.com/suyuan32/simple-admin-file/internal/handler/file"
	tag "github.com/suyuan32/simple-admin-file/internal/handler/tag"
	"github.com/suyuan32/simple-admin-file/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/init/database",
				Handler: base.InitDatabaseHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Authority},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/file/list",
					Handler: file.FileListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/file/update",
					Handler: file.UpdateFileHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/file/delete",
					Handler: file.DeleteFileHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/file/status",
					Handler: file.ChangePublicStatusHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/file/download/:id",
					Handler: file.DownloadFileHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/upload",
				Handler: file.UploadHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Authority},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/tag/create",
					Handler: tag.CreateTagHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/tag/update",
					Handler: tag.UpdateTagHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/tag/delete",
					Handler: tag.DeleteTagHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/tag/list",
					Handler: tag.GetTagListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/tag",
					Handler: tag.GetTagByIdHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)
}

// Code generated by ent, DO NOT EDIT.

package ent

import "time"

// set field if value's pointer is not nil.
func (f *FileUpdate) SetNotNilUpdatedAt(value *time.Time) *FileUpdate {
	if value != nil {
		return f.SetUpdatedAt(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdateOne) SetNotNilUpdatedAt(value *time.Time) *FileUpdateOne {
	if value != nil {
		return f.SetUpdatedAt(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileCreate) SetNotNilUpdatedAt(value *time.Time) *FileCreate {
	if value != nil {
		return f.SetUpdatedAt(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdate) SetNotNilStatus(value *uint8) *FileUpdate {
	if value != nil {
		return f.SetStatus(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdateOne) SetNotNilStatus(value *uint8) *FileUpdateOne {
	if value != nil {
		return f.SetStatus(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileCreate) SetNotNilStatus(value *uint8) *FileCreate {
	if value != nil {
		return f.SetStatus(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdate) SetNotNilName(value *string) *FileUpdate {
	if value != nil {
		return f.SetName(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdateOne) SetNotNilName(value *string) *FileUpdateOne {
	if value != nil {
		return f.SetName(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileCreate) SetNotNilName(value *string) *FileCreate {
	if value != nil {
		return f.SetName(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdate) SetNotNilFileType(value *uint8) *FileUpdate {
	if value != nil {
		return f.SetFileType(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdateOne) SetNotNilFileType(value *uint8) *FileUpdateOne {
	if value != nil {
		return f.SetFileType(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileCreate) SetNotNilFileType(value *uint8) *FileCreate {
	if value != nil {
		return f.SetFileType(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdate) SetNotNilSize(value *uint64) *FileUpdate {
	if value != nil {
		return f.SetSize(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdateOne) SetNotNilSize(value *uint64) *FileUpdateOne {
	if value != nil {
		return f.SetSize(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileCreate) SetNotNilSize(value *uint64) *FileCreate {
	if value != nil {
		return f.SetSize(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdate) SetNotNilPath(value *string) *FileUpdate {
	if value != nil {
		return f.SetPath(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdateOne) SetNotNilPath(value *string) *FileUpdateOne {
	if value != nil {
		return f.SetPath(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileCreate) SetNotNilPath(value *string) *FileCreate {
	if value != nil {
		return f.SetPath(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdate) SetNotNilUserUUID(value *string) *FileUpdate {
	if value != nil {
		return f.SetUserUUID(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdateOne) SetNotNilUserUUID(value *string) *FileUpdateOne {
	if value != nil {
		return f.SetUserUUID(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileCreate) SetNotNilUserUUID(value *string) *FileCreate {
	if value != nil {
		return f.SetUserUUID(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdate) SetNotNilMd5(value *string) *FileUpdate {
	if value != nil {
		return f.SetMd5(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdateOne) SetNotNilMd5(value *string) *FileUpdateOne {
	if value != nil {
		return f.SetMd5(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileCreate) SetNotNilMd5(value *string) *FileCreate {
	if value != nil {
		return f.SetMd5(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (t *TagUpdate) SetNotNilUpdatedAt(value *time.Time) *TagUpdate {
	if value != nil {
		return t.SetUpdatedAt(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagUpdateOne) SetNotNilUpdatedAt(value *time.Time) *TagUpdateOne {
	if value != nil {
		return t.SetUpdatedAt(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagCreate) SetNotNilUpdatedAt(value *time.Time) *TagCreate {
	if value != nil {
		return t.SetUpdatedAt(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagUpdate) SetNotNilStatus(value *uint8) *TagUpdate {
	if value != nil {
		return t.SetStatus(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagUpdateOne) SetNotNilStatus(value *uint8) *TagUpdateOne {
	if value != nil {
		return t.SetStatus(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagCreate) SetNotNilStatus(value *uint8) *TagCreate {
	if value != nil {
		return t.SetStatus(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagUpdate) SetNotNilName(value *string) *TagUpdate {
	if value != nil {
		return t.SetName(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagUpdateOne) SetNotNilName(value *string) *TagUpdateOne {
	if value != nil {
		return t.SetName(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagCreate) SetNotNilName(value *string) *TagCreate {
	if value != nil {
		return t.SetName(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagUpdate) SetNotNilRemark(value *string) *TagUpdate {
	if value != nil {
		return t.SetRemark(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagUpdateOne) SetNotNilRemark(value *string) *TagUpdateOne {
	if value != nil {
		return t.SetRemark(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagCreate) SetNotNilRemark(value *string) *TagCreate {
	if value != nil {
		return t.SetRemark(*value)
	}
	return t
}
